README: Compiler Project
sl136
SeungJi Lee
CSCI031


Design Changes:
	1. The SemanticVisitor collects the data for memory allocation (declaring variables) and pass it to the CodeGenVisitor. The CodeGenVisitor then allocates the memory according to the passed data when it is constructed.

	2. ID class and DeclVar class are added. They both are used like struct in C++.
		a) ID: holds a name and an IDType. Name is the name of a variable or current scope. IDType is either ARRAY, SINGLE, STRUCT,  NEWSCOPE. This class is used for scope analysis.

		b) DeclVar: holds a name and an integer size. Name is the name of a variable. Size is the size of the variable. If the variable is a scalar, then size is 1. If the variable is an array, size is the size of the array.

BUGS:
	1. All the bugs that have been found are fixed.

EXTRA CREDIT:
**** POINTER
Modifications:
	1. modified Tokenizer: modified it so that it recognizes * and &.
	2. added DEREFERENCE types to TokenType for &, respectively. TokenType.TIMES is used for *;
	3. nodes added:
		a) NodeInstrAssignSinglePointer
		b) NodeInstrAssignArrayPointer
		c) NodeExprArrayVarPointer
		d) NodeExprVarPointer
		e) NodeExprArrayVarDeref
		f) NodeExprVarDeref
	4. added handle methods of the newly added nodes to Visitor interface, and thus all the classes the implements Visitor.
	5. made NodeInstrDecl abstract class to hold String _id; and a method to return it ( identifier() ).
	

Remarks:
	


**** STRUCT
Modifications:
	0. added NodeInstrAssignStruct, NodeExprStruct, NodeInstrDeclConsStruct, NodeInstrDeclStruct, NodeListDecl, NodeListDeclCons, NodeListDeclNil
	1. when declaring variables inside a struct, _[struct name] is attached at the end to avoid faulty scope analysis error.
	2. ExprType enum added: used to verify the type of NodeExpr
	3. NodeExpr now also has an abstract method ExprType exprType(), that returns the type of the NodeExpr instance.
	4. NodeVariableExpr added: this is an abstract class extending NodeExpr
		*) NodeExprVar, NodeExprArrayVar, NodeExprStruct, NodeExprInt extends this class
	5. DOT and STRUCT TokenType added.

Remarks:
	
	





**** ADDED GRAMMAR!
** For Pointers
	<Instr>		::= 	*ID<IDSfx> := <Expr>;
	<Factor>	::=	&ID<IDSfx>
	<Factor>	::=	*ID<IDSfx>

** For Struct
