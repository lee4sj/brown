jump.assembly

LIM r0, -1      -> 0100 0000 11111111  -> 40ff
LIM r1, 1       -> 0100 0001 00000001  -> 4101
LIM r2, 0       -> 0100 0010 00000000  -> 4200
SW r2, r0       -> 0110 0000 0010 0000 -> 6020
SW r1, r1       -> 0110 0000 0001 0001 -> 6011
LW r0, r1       -> 0101 0000 0001 0000 -> 5010
LW r1, r2       -> 0101 0001 0010 0000 -> 5120
JGZ r1, r1      -> 0111 0000 0001 0001 -> 7011
JGZ r0, r2      -> 0111 0000 0000 0010 -> 7002

Instruction	   Expected values
-----------------------------------------------------
LIM r0, -1      ;  r0:-1
LIM r1, 1       ;  r0:-1 r1:1
LIM r2, 0       ;  r0:-1 r1:1 r2:0
SW r2, r0       ;  r0:-1 r1:1 r2:0 Mem addr 0:-1 
SW r1, r1       ;  r0:-1 r1:1 r2:0 Mem addr 0:-1 Mem addr 1:1
LW r0, r1       ;  r0:1 r1:1 r2:0 Mem addr 0:-1 Mem addr 1:1
LW r1, r2       ;  r0:1 r1:-1 r2:0 Mem addr 0:-1 Mem addr 1:1
JGZ r1, r1      ;  r0:1 r1:-1 r2:0 Mem addr 0:-1 Mem addr 1:1 // This jump should not be taken
JGZ r0, r2      ;  r0:1 r1:-1 r2:0 Mem addr 0:-1 Mem addr 1:1 // The program should stop here (increment PC by zero)

40ff 4101 4200 6020 6011 5010 5120 7011 7002
